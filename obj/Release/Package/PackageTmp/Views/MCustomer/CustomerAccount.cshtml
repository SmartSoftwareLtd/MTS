
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<style>
    .ui-autocomplete {
        max-height: 100px;
        overflow-y: auto;
        /* prevent horizontal scrollbar */
        overflow-x: hidden;
    }

    .options {
        display: inline-block;
        margin-left: 16px;
        background-color: #3c8dbc;
        padding: 5px 15px;
        color: #FFF;
    }

    .dailogBoxWrapper {
        z-index: 999 !important;
    }
</style>


<div class="box-body">
    <div class="row">
        <div class="form-group col-xs-3">
            <label>Customer Type</label>
            <select id="ddlCustomerTypeID" class="form-control col-md-3" onchange="changeCustomerType()">
                <option value="1">ShowRoom Customer</option>
                <option value="2">Direct Customer</option>
            </select>

        </div>

        <div class="form-group col-xs-4" id="divForShowRoomCustomer">
            <label>Search By ShowRoom Customer Name</label>
            <input id="txtShowRoomCustomerName" style="position: relative;" class="form-control ui-autocomplete input-group-lg" type="text"
                   placeholder="Search By Customer Name" />
        </div>
        <div class="form-group col-xs-4" id="divForDirectCustomer" style="display:none;">
            <label>Search By Direct Customer Name</label>
            <input id="txtDirectCustomerName" style="position: relative;" class="form-control ui-autocomplete input-group-lg" type="text"
                   placeholder="Search By Customer Name" />

           
        </div>
    </div>
        <br /><br />
        <div class="row">
            <div class="form-group col-xs-3">
                <h3>
                    <label id="lblCustomeName" class="label label-warning form-control input-group-lg col-lg">
                        Name: <span id="spnCustomeName" class="label label-success"></span>
                    </label>
                </h3>
            </div>

            <div class="form-group col-xs-3">
                <h3>
                    <label id="lblLimit" class="label label-warning form-control input-group-lg col-lg">
                        Limit: <span id="spnLimit" class="label label-success"></span>
                    </label>
                </h3>
            </div>

            <br /><br /><br /><br /><br />
            <table id="dataGrid" class="table table-bordered table-striped"></table>
            <br /><br />
            <div>
                <input type="button" class="btn btn-info" id="btnPrint" value="Print" style="margin-left:480px; width:156px; display:none;" onclick="generateReport()" />
            </div>
        </div>

   
</div>
<script>
    var arrCustomerAccount = [];
    
    function changeCustomerType() {

        var CustomerTypeID = $("#ddlCustomerTypeID").val();
        if (CustomerTypeID==1) {
            $("#divForShowRoomCustomer").show();
            $("#divForDirectCustomer").hide();
        }
        else if (CustomerTypeID == 2) {
            $("#divForShowRoomCustomer").hide();
            $("#divForDirectCustomer").show();
        }
    }

    $(function () {
      
        $("#txtShowRoomCustomerName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/MCustomer/GetShowRoomCustomerAccount/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (!data.length) {
                            var result = [
                             {
                                 label: 'No matches found',
                                 value: response.term
                             }
                            ];
                            response(result);
                        }
                        else {
                            // normal response
                            response($.map(data, function (item) {
                               
                                    return {

                                        strSalesDate: item.strSalesDate,
                                        strChassisNum: item.strChassisNum,
                                        strMake: item.strMake,
                                        dmlSellingPrice: item.dmlSellingPrice,
                                        dmlAdvance: item.dmlAdvance,
                                        dmlBalance: item.dmlBalance,
                                        strCreditLimit: item.strCreditLimit,
                                        //CustomerFullName: item.CustomerFullName,
                                        PersonFullName: item.PersonFullName,
                                        value: item.PersonFullName,
                                        custID:item.iCustomerID
                                    }
                               
                            }));
                        }
                    }
                });
            },
            select: function (event, i) {
                debugger
                event.preventDefault();

                $("#txtCustomerName").val(i.item.value);
               
                $("#spnCustomeName").text(i.item.value);
                $("#spnLimit").text(i.item.strCreditLimit);
               
                getCustomerVehicles(i.item.custID);
                //var result = {
                //    strSalesDate: i.item.strSalesDate,
                //    strChassisNum: i.item.strChassisNum,
                //    strMake: i.item.strMake,
                //    dmlSellingPrice: i.item.dmlSellingPrice,
                //    dmlAdvance: i.item.dmlAdvance,
                //    dmlBalance: i.item.dmlBalance
                //};
                //arrCustomerAccount.push(result);

                //dataGridForCustomerAccount(arrCustomerAccount);
                //arrCustomerAccount = [];
            },
            minLength: 1
        });
    });

    function getCustomerVehicles(id)
    {
        debugger
        $.ajax({
            url: '/MCustomer/GetCustomerVehicles/',
            data: JSON.stringify({ 'custid': id }),
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                dataGridForCustomerAccount(data);
                $("#btnPrint").show();
            }
        });
    }


    $(function () {

        $("#txtDirectCustomerName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/MCustomer/GetDirectCustomerAccount/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (!data.length) {
                            var result = [
                             {
                                 label: 'No matches found',
                                 value: response.term
                             }
                            ];
                            response(result);
                        }
                        else {
                            // normal response
                            response($.map(data, function (item) {

                                return {

                                    strSalesDate: item.strSalesDate,
                                    strChassisNum: item.strChassisNum,
                                    strMake: item.strMake,
                                    dmlSellingPrice: item.dmlSellingPrice,
                                    dmlAdvance: item.dmlAdvance,
                                    dmlBalance: item.dmlBalance,
                                    strCreditLimit: item.strCreditLimit,
                                    CustomerFullName: item.CustomerFullName,
                                    //PersonFullName: item.PersonFullName,
                                    value: item.CustomerFullName,
                                    custID:item.iCustomerID
                                }

                            }));
                        }
                    }
                });
            },
            select: function (event, i) {
                debugger
                event.preventDefault();

                $("#txtCustomerName").val(i.item.value);

                $("#spnCustomeName").text(i.item.value);
                $("#spnLimit").text(i.item.strCreditLimit);

                getCustomerVehicles(i.item.custID);
                //var result = {
                //    strSalesDate: i.item.strSalesDate,
                //    strChassisNum: i.item.strChassisNum,
                //    strMake: i.item.strMake,
                //    dmlSellingPrice: i.item.dmlSellingPrice,
                //    dmlAdvance: i.item.dmlAdvance,
                //    dmlBalance: i.item.dmlBalance
                //};
                //arrCustomerAccount.push(result);

                //dataGridForCustomerAccount(arrCustomerAccount);
                //arrCustomerAccount = [];
            },
            minLength: 1
        });
    });

    function dataGridForCustomerAccount(CustomerAccountData) {
        debugger



        $("#dataGrid").jqGrid('GridUnload');

        $('#dataGrid').jqGrid({
            caption: "Customer Account List",
            data: CustomerAccountData,
            datatype: "local",

            colNames: ['Date', 'Chassis No', 'Make', 'Sale Price', 'Total Received', 'Balance (A/R)'],
            colModel: [
                { name: 'strSalesDate', index: 'strSalesDate', align: 'center' },
                  { name: 'strChassisNum', index: 'strChassisNum', align: 'center' },
                { name: 'strMake', index: 'strMake', align: 'center' },
                { name: 'dmlSellingPrice', index: 'dmlSellingPrice', align: 'center' },
                { name: 'dmlAdvance', index: 'dmlAdvance', align: 'center' },
                { name: 'dmlBalance', index: 'dmlBalance', align: 'center' },
            ],
            width: 1000,
            height: 200,
            rowNum: 100000,
            rownumbers: true,
            rownumWidth:50,
            ignoreCase: true,
            loadonce: false,
            
        });
        jQuery("#dataGrid").jqGrid('filterToolbar', { stringResult: true, searchOnEnter: false, defaultSearch: "cn" });
    }

</script>
<script>
    function generateReport() {
        debugger


        var griddata = jQuery("#dataGrid").getRowData();

        //var griddata = data;


        //for show room customers
        var columns = ['Date', 'Chassis No', 'Make', 'Sale Price', 'Total Received', 'Balance (A/R)'];

        var data = [];
        for (var i = 0; i < griddata.length; i++) {
            data.push([griddata[i].strSalesDate, griddata[i].strChassisNum, griddata[i].strMake, griddata[i].dmlSellingPrice, griddata[i].dmlAdvance, griddata[i].dmlBalance]);
        }

        var custName = $("#spnCustomeName").html();
        var Limit = $("#spnLimit").html();

        //Calculate total of Value
        var allRows = jQuery('#dataGrid').getDataIDs();
        var TotalSellingPrice = 0;
        var TotalAdvance = 0;
        var TotalBalance = 0;

        for (var j = 0; j < allRows.length; j++) {
            var rowData = jQuery("#dataGrid").getRowData(allRows[j]);
            TotalSellingPrice += Number(rowData['dmlSellingPrice']);//Calculating Sum of total column
            TotalAdvance += Number(rowData['dmlAdvance']);
            TotalBalance += Number(rowData['dmlBalance']);

        }
        data.push([, , , , , ]);
        data.push([, 'TOTAL', , TotalSellingPrice.toFixed(2), TotalAdvance.toFixed(2), TotalBalance.toFixed(2)]);

        var doc = new jsPDF('l', 'mm', [350, 300], '');

        var totalPagesExp = "{total_pages_count_string}";

        var pageContent = function (data) {
            // HEADER

            doc.setFontSize(20);
            doc.setTextColor(40);
            doc.setFontStyle('normal');




            doc.setFontSize(20);
            doc.setFontStyle('bold');
            doc.text("M.D.MOTORS", data.settings.margin.left + 140, 10);

            doc.setFontStyle('normal');
            doc.setFontSize(15);
            doc.text("Show room # 118, DUCAMZ, RAS AL KHOR, DUBAI, U.A.E. P.O. BOX 63544 DUBAI", data.settings.margin.left + 70, 20);
            doc.text("Tel : +971 4 333 8986 Fax : +971 4 333 2256  E-Mail : automan1@eim.ae", data.settings.margin.left + 90, 25);

            doc.setFontStyle('bold', 'underline');
            doc.text("Name:", data.settings.margin.left + 10, 35);
            doc.text(custName, data.settings.margin.left + 30, 35);

            doc.text("CUSTOMER ACCOUNT", data.settings.margin.left + 120, 35);
           

            doc.text("LimitAED:", data.settings.margin.left + 250, 35);
            doc.text(Limit, data.settings.margin.left + 280, 35);

            doc.setDrawColor(0, 0, 0) // draw black lines
            doc.setLineWidth(1);
            doc.line(150, 38, 188, 38);

            //doc.text("From Dt:", data.settings.margin.left + 80, 45);
            //doc.text(fromDate, data.settings.margin.left + 105, 45);
            //doc.text("To Dt:", data.settings.margin.left + 180, 45);
            //doc.text(toDate, data.settings.margin.left + 200, 45);

            // FOOTER
            var str = "Page " + data.pageCount;
            // Total page number plugin only available in jspdf v1.0+
            if (typeof doc.putTotalPages === 'function') {
                str = str + " of " + totalPagesExp;
            }
            doc.setFontSize(10);
            doc.text(str, data.settings.margin.left, doc.internal.pageSize.height - 10);

            //doc.text('Note: This is computer generated ', data.settings.margin.left, 20);
        };



        var secondGridTop = doc.autoTableEndPosY() + 10;

        doc.autoTable(columns, data, {
            theme: 'grid',
            addPageContent: pageContent,
            margin: { top: 50 },
            drawCell: function (cell, data) {
                var rows = data.table.rows;
                if (data.row.index == rows.length - 1) {
                    // doc.setFillColor(200, 200, 255);
                    doc.setFillColor(26, 188, 156);
                    doc.setFontStyle('bold');
                    //doc.setFontSize(16);
                }
            },
        });

        // Total page number plugin only available in jspdf v1.0+
        if (typeof doc.putTotalPages === 'function') {
            doc.putTotalPages(totalPagesExp);
        }
        //doc.output("dataurlnewwindow");
        window.open(doc.output('bloburl'), '_blank');
    }
</script>

<!-- JqGrid Scripts -->
<link href="~/scripts/jquery-ui-1.9.2.custom.css" rel="stylesheet" />
<link href="~/scripts/ui.jqgrid.css" rel="stylesheet" />
<script src="~/Scripts/jQuery-migrate-1.2.1-min.js"></script>
<script src="~/scripts/jQuery-migrate-1.2.1.js"></script>
<script src="~/scripts/grid.locale-en.js"></script>
<script src="~/scripts/jquery.jqgrid.min.js"></script>
<link rel="stylesheet" type="text/css" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.1/themes/redmond/jquery-ui.css" />


<script src="~/Content/plugins/jsPDF/jspdf.debug.js"></script>
<script src="~/Content/plugins/jsPDF/jspdf.plugin.autotable.js"></script>
<script src="http://www.ittutorials.in/js/demo/numtoword.js" type="text/javascript"></script>