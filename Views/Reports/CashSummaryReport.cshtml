
@{
    ViewBag.Title = "CashSummaryReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="tablecontainer" id="divForIndex">
    <div>
        <a class="popup btn btn-primary" href="/MCashTransaction/save" style="margin-bottom:20px; margin-top:20px;margin-left:10px;">New Transaction</a>

    </div>
    <br />
    <div class="col-md-4">
        <label>Date:</label>
        <input type="text" id="txtDate" class='form-control datepicker input-group-sm' placeholder="Select  Date" />
    </div>
    
    <div class="col-md-4">
        <label></label><br />
        <input type="button" id="btnFilter" class='btn btn-bitbucket' value="Filter" />
    </div>
    <br /><br /><br /><br />
    <div id="divForGridData">
        <table id="dataGrid" class="table table-bordered table-striped"></table>
        <br><br>
    </div>
    <br />
    <input type="button" style="margin-left: 200px;" class="btn btn-success col-md-2" value="Print" onclick="PrintReport()" />
</div>

<script>



    $(function () { // will trigger when the document is ready
        debugger
        //$('.datepicker').datepicker({ dateFormat: 'mm/dd/yy' }); //Initialise any date pickers

        $('.datepicker').datepicker({ dateFormat: 'mm/dd/yy' }); //Initialise any date pickers

     
        $("#txtDate").datepicker().datepicker("setDate", new Date());
    });


    var arrTansactionsData = new Array();
    var DebitAmount = 0;
    var CreditAmount = 0;
    var BalanceAmount = 0;
    $(function () {
        //$.ajax({
        //    contentType: 'application/json; charset=utf-8',
        //    dataType: 'json',
        //    type: 'GET',
        //    url: '/MCashTransaction/GetAllTransactions',
        //    //data: JSON.stringify({ 'cashModel': model }),
        //    success: function (data) {
        debugger
        var CashDate = $("#txtDate").val();
       

        $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: "/Reports/GetCashSummaryData",
            data: JSON.stringify({ date: CashDate }),
            success: function (data) {
                debugger
               
                arrTansactionsData = new Array();
                DebitAmount = 0;
                CreditAmount = 0;
                BalanceAmount = 0;

                arrTansactionsData.push({ CashType: "Opening Balance", CashAmount: data.openingBalance });
                arrTansactionsData.push({ CashType: "Cash From Sales", CashAmount: data.CashFromSales });
                arrTansactionsData.push({ CashType: "Cash From Balance", CashAmount: data.CashFromBalance });
                arrTansactionsData.push({ CashType: "Cash From Other", CashAmount: data.CashFromOther });

                arrTansactionsData.push({ CashType: "Cash Deposited To Bank", CashAmount: data.CashDepositedToBank });
                arrTansactionsData.push({ CashType: "Cash Paid For Expense", CashAmount: data.CashPaidForExpense });
                arrTansactionsData.push({ CashType: "Cash Paid IOU", CashAmount: data.CashPaidIOU });
                arrTansactionsData.push({ CashType: "Closing Balance", CashAmount: data.ClosingBalance });


                FillDataGrid(arrTansactionsData);
            }
        });


        $("#btnFilter").click(function () {
            arrTansactionsData = new Array();
            DebitAmount = 0;
            CreditAmount = 0;
            BalanceAmount = 0;

            debugger
            var CashDate = $("#txtDate").val();
          

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "/Reports/GetCashSummaryData",
                data: JSON.stringify({ 'date': CashDate }),
                success: function (data) {
                    debugger;
                                                           
                    arrTansactionsData.push({ CashType: "Opening Balance", CashAmount: data.openingBalance });
                    arrTansactionsData.push({ CashType: "Cash From Sales", CashAmount: data.CashFromSales });
                  arrTansactionsData.push({ CashType: "Cash From Balance", CashAmount: data.CashFromBalance });
                    arrTansactionsData.push({ CashType: "Cash From Other", CashAmount: data.CashFromOther });
             arrTansactionsData.push({ CashType: "Cash Deposited To Bank", CashAmount: data.CashDepositedToBank });
              arrTansactionsData.push({ CashType: "Cash Paid For Expense", CashAmount: data.CashPaidForExpense });
                      arrTansactionsData.push({ CashType: "Cash Paid IOU", CashAmount: data.CashPaidIOU });
                    arrTansactionsData.push({ CashType: "Closing Balance", CashAmount: data.ClosingBalance });                   

                   
                    

                    //FillDataGrid(arrTansactionsData);
                    FillDataGrid(arrTansactionsData);

                }
            });

        });


        function FillDataGrid(arrTansactionsData) {
            $("#dataGrid").jqGrid('GridUnload');
            debugger
            $('#dataGrid').jqGrid({
                caption: "Cash Summary",
                data: arrTansactionsData,
                datatype: "local",
                contentType: "application/json; charset-utf-8",
               

                colNames: ['Particulars', 'Amount'],
                colModel: [
                 
                    { name: 'CashType', index: 'CashType', align: 'center' },
                    { name: 'CashAmount', index: 'CashAmount', align: 'center' },
                   
                ],
                width: 600,
                height: 250,
                rowNum: 100000,
                rownumbers: true,
                rownumWidth: 50,
                loadonce: false,
                ignoreCase: true,
                cmTemplate: { sortable: false },
                //rowList: [10, 20, 30],
                //pager: 'pagingGrid',
            });
            jQuery("#dataGrid").jqGrid('filterToolbar', { stringResult: true, searchOnEnter: false, defaultSearch: "cn" });
            //jQuery("#dataGrid").jqGrid('navGrid', '#pagingGrid', { edit: false, add: false, del: false, search: false });

        }



        function CalDebit(cellvalue, options, rowObject) {

            if (rowObject.DebitCreditOptions == 1) {//Debit

                DebitAmount += rowObject.Amount;
                BalanceAmount += parseFloat(rowObject.Amount || 0);
                // return rowObject.Debit = rowObject.Amount;
                return cellvalue = rowObject.Amount;
            } else {
                return cellvalue = 0;
            }


        }

        function CalCredit(cellvalue, options, rowObject) {

            if (rowObject.DebitCreditOptions == 2) {//Credit

                CreditAmount += rowObject.Amount;
                BalanceAmount -= parseFloat(rowObject.Amount || 0);
                //return rowObject.Credit = rowObject.Amount;
                return cellvalue = rowObject.Amount;
            } else {
                return cellvalue = 0;
            }

        }


        function CalBalance(cellvalue, options, rowObject) {
            debugger

            if (!isNaN(DebitAmount) && !isNaN(CreditAmount) && BalanceAmount != null && !isNaN(BalanceAmount)) {

                //BalanceAmount += parseFloat(DebitAmount || 0) - parseFloat(CreditAmount || 0);
                return cellvalue = BalanceAmount.toFixed(2);
            }
        }
    });

    function PrintReport() {
        debugger

        var griddata = jQuery("#dataGrid").getRowData();

        //var griddata = data;

        var DebitedTotal=0; 
        var CreditedTotal=0;
        var columns = ['PARTICULARS', 'AMOUNT', 'PARTICULARS', 'AMOUNT'];
        var data = [];


        //Calculate total of Value
        for (var i = 0; i <= 3; i++) {
            DebitedTotal += parseFloat(griddata[i].CashAmount);
            CreditedTotal += parseFloat(griddata[i].CashAmount);
        }
        for (var j = 4; j <= 6; j++) {
            CreditedTotal -= parseFloat(griddata[j].CashAmount);
        }

       
        data.push([griddata[0].CashType, griddata[0].CashAmount,griddata[4].CashType, griddata[4].CashAmount]);
        data.push([griddata[1].CashType, griddata[1].CashAmount,griddata[5].CashType, griddata[5].CashAmount]);
        data.push([griddata[2].CashType, griddata[2].CashAmount,griddata[6].CashType, griddata[6].CashAmount]);
        data.push([griddata[3].CashType, griddata[3].CashAmount, griddata[7].CashType, CreditedTotal]);

       
        data.push(['Total', DebitedTotal.toFixed(2), 'Total', CreditedTotal.toFixed(2)]);

        var Date = $("#txtDate").val();

       
        var doc = new jsPDF("p", "mm", "a4");

        var totalPagesExp = "{total_pages_count_string}";

        var pageContent = function (data) {
            // HEADER
            doc.rect(10, 10, 190, 270)
            doc.setFontSize(20);
            doc.setTextColor(40);
            doc.setFontStyle('normal');



            doc.setFontSize(25);
            doc.setFontStyle('bold');
            doc.text("DAA MOTORS FZCO", data.settings.margin.left + 70, 25);

            doc.setFontSize(15);
            doc.setFontStyle('normal');
            //doc.setLineWidth(1)
            doc.line(10, 33, 200, 33);
            //doc.setFontStyle('bold', 'underline');
            doc.text("CASH SUMMARY", data.settings.margin.left + 65, 38);           
            doc.line(10, 40, 200, 40);

          
            //doc.setFontSize(15);
            //doc.text("Show room # 118, DUCAMZ, RAS AL KHOR, DUBAI, U.A.E. P.O. BOX 63544 DUBAI", data.settings.margin.left + 70, 20);
            //doc.text("Tel : +971 4 333 8986 Fax : +971 4 333 2256  E-Mail : automan1@eim.ae", data.settings.margin.left + 90, 25);


            doc.text("As on Dated:", data.settings.margin.left + 102, 48);
            doc.text(Date, data.settings.margin.left + 135, 48);

            //doc.text("Rprt Dt:", data.settings.margin.left + 125, 20);
            //doc.text(ReportDate, data.settings.margin.left + 145, 20);
            //doc.setFontSize(20)
            //doc.setTextColor(0, 0, 255)
            //doc.text(custFullName, data.settings.margin.left, 20);
            //doc.setFontSize(10)
            //doc.text(custAddr, data.settings.margin.left, 30);
            //doc.text(custPhone, data.settings.margin.left, 40);

            // FOOTER
            var str = "Page " + data.pageCount;
            // Total page number plugin only available in jspdf v1.0+
            if (typeof doc.putTotalPages === 'function') {
                str = str + " of " + totalPagesExp;
            }
            doc.setFontSize(10);
            doc.text(str, data.settings.margin.left, doc.internal.pageSize.height - 10);

            //doc.text('Note: This is computer generated ', data.settings.margin.left, 20);
        };

        doc.autoTable(columns, data, {
            theme: 'grid',
            addPageContent: pageContent,
            margin: { top: 50 },

            drawCell: function (cell, data) {
                var rows = data.table.rows;
                if (data.row.index == rows.length - 1) {
                    // doc.setFillColor(200, 200, 255);
                    doc.setFillColor(26, 188, 156);
                    doc.setFontStyle('bold');
                    //doc.setFontSize(16);
                }
            },
        });


        var img = new Image;
        img.onload = function () {

            this.width = 220;
            this.height = 70;
            doc.addImage(this, 15, 12);
            window.open(doc.output('bloburl'), '_blank');
        };

        img.crossOrigin = "";  // for demo as we are at different origin than image
        img.src = "/Content/Images/DAACashSummaryLOGO.bmp";  // image
      

        // Total page number plugin only available in jspdf v1.0+
        if (typeof doc.putTotalPages === 'function') {
            doc.putTotalPages(totalPagesExp);
        }
        //doc.output("dataurlnewwindow");
        //window.open(doc.output('bloburl'), '_blank');
    }

</script>

<!-- JqGrid Scripts -->
<link href="~/scripts/jquery-ui-1.9.2.custom.css" rel="stylesheet" />
<link href="~/scripts/ui.jqgrid.css" rel="stylesheet" />
<script src="~/Scripts/jQuery-migrate-1.2.1-min.js"></script>
<script src="~/scripts/jQuery-migrate-1.2.1.js"></script>
<script src="~/scripts/grid.locale-en.js"></script>
<script src="~/scripts/jquery.jqgrid.min.js"></script>
<script src="~/Content/dist/js/Custom.js"></script>


<script src="~/Content/plugins/jsPDF/jspdf.debug.js"></script>
<script src="~/Content/plugins/jsPDF/jspdf.plugin.autotable.js"></script>
<script src="http://www.ittutorials.in/js/demo/numtoword.js" type="text/javascript"></script>

<link rel="stylesheet" type="text/css" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.1/themes/redmond/jquery-ui.css" />

